name: tests

on:
  push:
    tags:
      - v*
    branches:
      - release
      - dev
  pull_request:
    branches:
      - release

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.48.0
          args: --verbose
  test:
    needs: lint
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        go: [ 1.18, 1.19 ]
        test-tags: [ '', '-tags jsoniter' ]
        include:
          - os: ubuntu-latest
            go-build: ~/.cache/go-build
          - os: macos-latest
            go-build: ~/Library/Caches/go-build
    name: ${{ matrix.os }} @ Go ${{ matrix.go }} ${{ matrix.test-tags }}
    runs-on: ${{ matrix.os }}
    env:
      GO111MODULE: on
      TESTTAGS: ${{ matrix.test-tags }}
      GOPROXY: https://proxy.golang.org
    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - uses: actions/cache@v3
        with:
          path: |
            ${{ matrix.go-build }}
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run Tests
        run: make test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: ${{ matrix.os }},go-${{ matrix.go }},${{ matrix.test-tags }}
          verbose: true

      - name: Format
        if: matrix.go-version == '1.19.x'
        run: diff -u <(echo -n) <(gofmt -d .)
